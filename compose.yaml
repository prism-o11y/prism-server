services:
  user-service:
    build: 
      context: ./user-service
      dockerfile: Dockerfile
    env_file:
      - assets/env/.env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - kafka

  alert-noti-service:
    build: 
      context: ./alert-noti-service
      dockerfile: Dockerfile
    env_file:
      - assets/env/.env
    ports:
      - "8001:8001"
    depends_on:
      - kafka

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: prism
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: >
      bash -c "
      kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic log-topic &&
      kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic notify-topic &&
      kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic user-op-topic
      "
    restart: 'no'

volumes:
  postgres_data:
  kafka_data:
