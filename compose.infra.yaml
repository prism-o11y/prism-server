services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - user-service
      - alert-noti-service
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  consul:
    image: hashicorp/consul:latest
    command: agent -server -bootstrap -ui -client=0.0.0.0
    ports:
      - "8500:8500"

  alert-noti-service-2:
    build: 
      context: .
      dockerfile: alert-noti-service/Dockerfile
    env_file:
      - assets/env/.env
    environment:
      - SERVER_NODE=1
    ports:
      - "8002:8002"
    depends_on:
      - kafka

  db:
    image: postgres:16  
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: prism
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  cache:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--requirepass", "root"]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafka-update:
    image: confluentinc/cp-kafka:latest
    entrypoint: >
      bash -c "
      kafka-topics --alter --bootstrap-server kafka:9092 --topic transfer-topic --partitions 2
      "
    restart: "no"
    depends_on:
      - kafka

  kafka-init:
    image: confluentinc/cp-kafka:latest
    entrypoint: >
      sh -c "
      kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic log-topic
      && kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic notify-topic
      && kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic user-topic
      && kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic transfer-topic
      "
    restart: "no"
    depends_on:
      - kafka

volumes:
  postgres_data:
  redis_data:
  kafka_data:
